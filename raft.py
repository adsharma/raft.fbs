# automatically generated by the FlatBuffers compiler, do not modify
from ctypes import (
    c_int64 as int64,
    c_uint64 as uint64,
)
from dataclasses import dataclass
from typing import Protocol

from enum import Enum
from typing import Union


class LogEntryType(Enum):
    LOG_ENTRY_COMMAND = 0
    LOG_ENTRY_NOOP = 1
    LOG_ENTRY_ADD_PEER_DEPRECATED = 2
    LOG_ENTRY_REMOVE_PEER_DEPRECATED = 3
    LOG_ENTRY_BARRIER = 4
    LOG_ENTRY_CONFIGURATION = 5

@dataclass
class RaftHeader:
    protocol_version: int

@dataclass
class LogEntry:
    index: uint64
    term: uint64
    type: "LogEntryType"
    data: "[int8]"
    extensions: "[int8]"

@dataclass
class PeerNameContainer:
    peer_name: str

@dataclass
class AppendEntriesRequest:
    term: uint64
    leader: "[int8]"
    prev_log_entry: uint64
    prev_log_term: uint64
    entries: "[LogEntry]"
    leader_commit_index: uint64
    raft_header: "RaftHeader"

@dataclass
class AppendEntriesResponse:
    term: uint64
    last_log: uint64
    success: bool
    no_retry_backoff: bool
    raft_header: "RaftHeader"

@dataclass
class RequestVoteRequest:
    term: uint64
    candidate: "[int8]"
    last_log_index: uint64
    last_log_term: uint64
    leadership_transfer: bool
    raft_header: "RaftHeader"

@dataclass
class RequestVoteResponse:
    term: uint64
    peers: "[int8]"
    granted: bool
    raft_header: "RaftHeader"

@dataclass
class Data:
    data: "[int8]"

@dataclass
class InstallSnapshotStream:
    payload: "PayloadUnion"

@dataclass
class InstallSnapshotRequest:
    term: uint64
    leader: "[int8]"
    last_log_index: uint64
    last_log_term: uint64
    peers: "[int8]"
    configuration: "[int8]"
    config_idx: uint64
    size: int64
    raft_header: "RaftHeader"

@dataclass
class InstallSnapshotResponse:
    term: uint64
    success: bool
    raft_header: "RaftHeader"

@dataclass
class AppendEntriesPipelineResponse:
    error: str
    response: "AppendEntriesResponse"

@dataclass
class TimeoutNowRequest:
    raft_header: "RaftHeader"

@dataclass
class TimeoutNowResponse:
    raft_header: "RaftHeader"


PayloadUnion = Union[InstallSnapshotRequest, Data]
